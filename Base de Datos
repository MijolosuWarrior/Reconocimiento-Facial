import cv2
import os
import imutils

##########################################################
#Damos nombre a la carpeta, elejimos la ruta, alacenamos en personPath
personName = 'Michely'
dataPath = 'C:/Users/MI/PycharmProjects/pythonProject/Reconocimiento Facial/Data'  # Cambia a la ruta donde hayas almacenado Data
personPath = dataPath + '/' + personName

############################################################
#Condicional para crear la carpeta
if not os.path.exists(personPath):
    print('Carpeta creada: ', personPath)
    os.makedirs(personPath)

############################################################
#####________Capturamos el video streem__________#########
cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
# cap = cv2.VideoCapture('Video.mp4')

##############################################################
#Usamos el modelo haarcascade usando un claisificador y lo almacenamos en faceClassif, iniciamos el contador en 0
faceClassif = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
count = 0

################################################################
#####_________Bucle
while True:

    ret, frame = cap.read()
    if ret == False:
        break
    frame = imutils.resize(frame, width=320)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    auxFrame = frame.copy()

    faces = faceClassif.detectMultiScale(gray, 1.3, 5)

    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
        rostro = auxFrame[y:y + h, x:x + w]
        rostro = cv2.resize(rostro, (720, 720), interpolation=cv2.INTER_CUBIC)
        cv2.imwrite(personPath + '/rotro_{}.jpg'.format(count), rostro)
        count = count + 1
    cv2.imshow('frame', frame)

    k = cv2.waitKey(1)
    if k == 27 or count >= 300:
        break

cap.release()
cv2.destroyAllWindows()
